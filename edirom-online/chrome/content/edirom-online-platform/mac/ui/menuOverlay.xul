<?xml version="1.0"?>
<!--
    ***** BEGIN LICENSE BLOCK *****

	Copyright © 2012 Webapp XUL Wrapper contributors
    Copyright © 2009 Center for History and New Media
                     George Mason University, Fairfax, Virginia, USA
                     http://zotero.org

    This file is part of Webapp XUL Wrapper.

    Webapp XUL Wrapper is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Webapp XUL Wrapper is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with Webapp XUL Wrapper.  If not, see <http://www.gnu.org/licenses/>.

    ***** END LICENSE BLOCK *****
-->

<!DOCTYPE overlay [
<!ENTITY % brandDTD SYSTEM "chrome://branding/locale/brand.dtd">
%brandDTD;
<!ENTITY % standaloneDTD SYSTEM "chrome://edirom-online/locale/menus.dtd" >
%standaloneDTD;
]>
<overlay id="menuOverlay"
         xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
    
    <script type="application/javascript" src="chrome://global/content/macWindowMenu.js"/>

	<commandset id="mainCommandSet">
		<command id="minimizeWindow"
				label="&minimizeWindow.label;"
				oncommand="window.minimize();" />
		<command id="cmd_reloadEdition"
			label="&reloadEdition.label;"
			oncommand="MainUI.reloadEdition();" />
	</commandset>
	
	<keyset id="mainKeyset">
		<key id="key_minimizeWindow"
				command="minimizeWindow"
				key="&minimizeWindow.key;"
				modifiers="accel"/>
		<key id="key_openHelpMac"
				oncommand="App.openHelp();"
				key="&helpMac.commandkey;"
				modifiers="accel"/>
		
		<!-- These are used to build the Application menu under Cocoa widgets -->
		<key id="key_preferencesCmdMac"
				key="&preferencesCmdMac.commandkey;"
				modifiers="accel"/>
		<key id="key_hideThisAppCmdMac"
				key="&hideThisAppCmdMac.commandkey;"
				modifiers="accel"/>
		<key id="key_hideOtherAppsCmdMac"
				key="&hideOtherAppsCmdMac.commandkey;"
				modifiers="accel,alt"/>
		<key id="key_quitApplication"
				key="&quitApplicationCmdMac.key;"
				command="cmd_quitApplication"
				modifiers="accel"/>
		
		<key id="key_reloadEdition"
			key="&reloadEdition.key;"
			command="cmd_reloadEdition"
			modifiers="accel"/>
	</keyset>

    <menupopup id="menu_FilePopup">
		<!--<menuitem id="menu_close" label="&closeCmd.label;" key="key_close"
				accesskey="&closeCmd.accesskey;" command="cmd_close"/>-->
		<!-- nsMenuBarX hides these and uses them to build the Application menu. -->
        <!--<menuitem id="menu_preferences"
				label="&preferencesCmdMac.label;"
				key="key_preferencesCmdMac"
				oncommand="App.openPreferences();"/>-->
        <menuitem id="menu_mac_services"
				label="&servicesMenuMac.label;"/>
        <menuitem id="menu_mac_hide_app"
				label="&hideThisAppCmdMac.label;"
				key="key_hideThisAppCmdMac"/>
        <menuitem id="menu_mac_hide_others"
				label="&hideOtherAppsCmdMac.label;"
				key="key_hideOtherAppsCmdMac"/>
        <menuitem id="menu_mac_show_all"
				label="&showAllAppsCmdMac.label;"/>
		<menuitem id="menu_FileQuitItem"
				label="&quitApplicationCmdMac.label;"
				key="key_quitApplication"
				command="cmd_quitApplication"/>
    </menupopup>
	
    <menu id="windowMenu"
			label="&windowMenu.label;"
			datasources="rdf:window-mediator" ref="NC:WindowMediatorRoot"
			onpopupshowing="macWindowMenuDidShow();"
			hidden="false">
		<template>
			<rule>
				<menupopup>
					<menuitem uri="rdf:*"
							label="rdf:http://home.netscape.com/NC-rdf#Name"
							type="radio"
							name="windowList"
							oncommand="ShowWindowFromResource(event.target)"/>
				</menupopup>
			</rule>
		</template>
        <menupopup id="menu_windowPopup">
            <menuitem command="minimizeWindow" label="&minimizeWindow.label;" key="key_minimizeWindow"/>
            <!-- decomment when "BringAllToFront" is implemented
                <menuseparator/>
                <menuitem label="&bringAllToFront.label;" disabled="true"/> -->
            <menuseparator id="sep-window-list"/>
        </menupopup>
    </menu>
</overlay>
